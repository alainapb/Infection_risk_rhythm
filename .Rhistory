filter(Age == 8) %>%
ggplot(aes(x=days_post_exposure, y=Length_at_exposure_mm, color=as.factor(Animal)))+
geom_point()+
geom_line()+
facet_grid(Time_treatment~.)
growth %>%
filter(Age == 9) %>%
ggplot(aes(x=days_post_exposure, y=Length_at_exposure_mm, color=as.factor(Animal)))+
geom_point()+
geom_line()+
facet_grid(Time_treatment~.)
# infection prevalence
all.data %>%
filter(Time_treatment == "Exposed" | Sex == "F") %>%
ggplot(aes(x=Age, y=infected, color=Time_treatment))+
scale_color_manual(values=c("goldenrod2", "darkblue"))+
geom_jitter(width = .1, height = .1)+
geom_smooth(method="lm")+
scale_y_continuous(limits=c(-.1,1))+
scale_x_continuous(breaks=c(6,7,8,9))+
theme_bw()
#infection intensity
life %>%
filter(Time_treatment == "Exposed"| Sex == "F") %>%
ggplot(aes(x=Age, y=spore_counts, color=Time_treatment))+
scale_color_manual(values=c("goldenrod2", "darkblue"))+
#geom_jitter(width=.25)+
geom_point()+
geom_smooth(method="lm")+
theme_bw()
#total offspring
all.data %>%
filter(Sex == "F") %>%
#filter(infected != "NA") %>%     #removes controls
ggplot(aes(x=Time_treatment, y=total_offspring, fill=as.factor(infected)))+
geom_boxplot()+
facet_grid(~Age)
#age at first clutch
all.data %>%
filter(Sex == "F") %>%
#filter(infected != "NA") %>%     #removes controls
ggplot(aes(x=Time_treatment, y=age_at_first_clutch, fill=as.factor(infected)))+
geom_boxplot()+
facet_grid(~Age)
growth %>%
filter(days_post_exposure == 0) %>%
ggplot()+
geom_boxplot(mapping=aes(x=as.factor(Age), y=Length_at_exposure_mm))
all.data %>%
group_by(Age) %>%
summarise(length = mean(Length_at_exposure_mm, na.rm=TRUE))-> average_size
average_size$size<-(average_size$length)^3
po_correct$Age<-c(rep(6, 32), rep(7,32), rep(8,32), rep(9,32))
po_correct$Hours<-rep(c(rep(3,4), rep(6,4), rep(9, 4), rep(12,4), rep(15,4), rep(18,4), rep(21,4), rep(24,4)),4)
po_correct$Phase<-c(rep("Resting", 20), rep('Active', 12),rep("Resting", 20), rep('Active', 12), rep("Resting", 20), rep('Active', 12), rep("Resting", 20), rep("Active", 12))
po_correct$Time_treatment<-c(rep("Light", 20), rep('Dark', 12),rep("Light", 20), rep('Dark', 12), rep("Light", 20), rep('Dark', 44))
no_size<-po_correct %>%
ggplot() +
geom_point(aes(x = Hours, y = log(PO), group = sample)) +
geom_smooth(aes(x = Hours, y = log(PO)), method = "lm", color ="orange", alpha = 0.5) +
labs(y="Active PO", x="Age (days)")+
facet_grid(~Age)+
#scale_x_continuous(breaks = c(24,48,72,96), labels = c(6,7, 8,9))+
theme_bw()+
theme(axis.text.x = element_text(size=8, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title = element_text(size = 12, color="black"))
#ggsave("figure2.pdf", height =4, width =6)
##Size corrected plots
a<-as.vector(po_correct %>%
filter(time < 27) %>%
summarise(size_cor = PO/2.425660))
b<-as.vector(po_correct %>%
filter(time > 24, time <51) %>%
summarise(size_cor = PO/2.564842))
c<-as.vector(po_correct %>%
filter(time > 48, time < 75) %>%
summarise(size_cor = PO/2.761120))
d<-as.vector(po_correct %>%
filter(time > 72) %>%
summarise(size_cor = PO/3.097012))
size_cor<-unlist(c(a,b,c,d))
unname(size_cor)
po_correct$size_cor<-unlist(unname(size_cor))
with_size<-po_correct %>%
ggplot() +
geom_point(aes(x = Hours, y = log(size_cor), group = sample)) +
geom_smooth(aes(x = Hours, y = log(size_cor)), method = "lm", color ="orange", alpha = .5) +
labs(y="Active PO", x="Age (days)")+
facet_grid(~Age)+
#scale_x_continuous(breaks = c(24,48,72,96), labels = c(6,7, 8,9))+
theme_bw()+
theme(axis.text.x = element_text(size=8, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title = element_text(size = 12, color="black"))
no_size + with_size
####### PO STATS #########
hist(po_correct$PO)
# po is strictly? positive
# no zeros
po_summary <- po_correct %>%
group_by(Age) %>%
mutate(age_mean_po = mean(PO, na.rm = TRUE)) %>%
group_by(Time_treatment, Age) %>%
summarise(mean_po = mean(PO, na.rm = TRUE),
min_po = min(PO, na.rm = TRUE),
max_po = max(PO, na.rm = TRUE),
age_mean_po = unique(age_mean_po))
po_summary
# linear model using log(Corrected_Change) as response
summary(po_age<-glm(PO ~ Age + Time_treatment, family = gaussian(link = "log"), data = po_correct))
with(summary(po_age), 1 - deviance/null.deviance) #Rsquared .23
plot(po_age)
# plot predictions
crit <- 1.96
nd <- expand.grid(Time_treatment=c("Dark", "Light"), Age = seq(6, 9, length.out = 100))
po_pred <- predict(po_age, newdata = nd, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd)
po_pred %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Age, y = PO, col = Time_treatment), alpha = .6) +
geom_point(data = po_summary, mapping = aes(x = Age, y =mean_po, col = Time_treatment), pch = 22, size =5)+
geom_line(aes(x = Age, y = exp(fit), col = Time_treatment)) +
geom_ribbon(aes(x = Age, ymin = exp(lwr), ymax = exp(upr), fill = Time_treatment), alpha = 0.3)+
scale_color_manual(values=c( "#0033cc", "#ffcc33"))+
scale_fill_manual(values=c("#0033cc", "#ffcc33"))+
theme_bw()
#look at size corrected PO
summary(po_sc_age<-glm(size_cor ~ Age + Time_treatment, family = gaussian(link = "log"), data = po_correct))
with(summary(po_sc_age), 1 - deviance/null.deviance) #rsquared .14
po_correct %>%
ggplot()+
geom_point(aes(x=Hours, y = PO))+
geom_smooth(aes(x=Hours, y = PO), method = "lm")+
facet_grid(~Age)
summary(po_plot<-glm(PO ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
with(summary(po_plot), 1 - deviance/null.deviance) #rsquared .226
crit <- 1.96
nd2 <- expand.grid(Hours=c(3,6,9,12,15,18,21,24), Age = seq(6, 9, length.out = 4))
po_fig <- predict(po_plot, newdata = nd2, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd2)
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
ggsave("po_figure.png", bg = "transparent", height =5, width = 9)
summary(po_plot2<-glm(size_cor ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
with(summary(po_plot2), 1 - deviance/null.deviance) #rsquared .14
crit <- 1.96
nd3 <- expand.grid(Hours=c(3,6,9,12,15,18,21,24), Age = seq(6, 9, length.out = 4))
po_fig2 <- predict(po_plot2, newdata = nd3, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd3)
po_fig2 %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = size_cor), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
prev <- all.data %>%
filter(Exposed.Control == "Exposed",
days_post_exposure == 0) %>%
group_by(Age, Time_treatment) %>%
summarise(inf = sum(infected, na.rm=T),
n = n(),
prev = inf/n,
sc_fr_sw = 0)
prev %>% knitr::kable()
prev %>% ggplot() +
geom_point(aes(x = Age, y = prev, col = Time_treatment)) +
geom_line(aes(x = Age, y = prev, col = Time_treatment)) +
ylim(0,1)
# get subset for infection and spore count analysis
# arbitrarily choose 0 days post exposure since the data is duplicated for each days_post_exposure
reg_data <- filter(all.data, Exposed.Control == "Exposed", days_post_exposure == 0)
reg_data$sc_fr_sw<-(reg_data$fr_sw - mean (reg_data$fr_sw))/ sd (reg_data$fr_sw) # scaling feeding rate
summary(reg_data)
# logistic regression
# model 1: Time_treatment only
inf_time <- glm(infected ~ Time_treatment, family = binomial , data = reg_data)
# model 2: common linear effect of age with Time_treatment specific intercepts
inf_main <- glm(infected ~ Age + Time_treatment, family = binomial, data = reg_data)
# model 3: common linear effect of age and fr with time_treatment
inf_fr <- glm(infected ~ Age + sc_fr_sw + Time_treatment, family = binomial, data = reg_data)
# model 4: Time_treatment specific intercept and slopes
inf_full_lin <- glm(infected ~ Age * Time_treatment, family = binomial, data = reg_data)
# model 5: full interaction model with age as categorical
inf_full_cat <- glm(infected ~ factor(Age) * Time_treatment, family = binomial , data = reg_data)
#model6
inf_full <- glm(infected ~ Age * sc_fr_sw * Time_treatment, family = binomial, data = reg_data)
#model7: feeding rate only
inf_fr_only <-glm(infected ~ sc_fr_sw, family = binomial, data = reg_data)
#age + feeding rate
summary(glm(infected ~ Age +sc_fr_sw , family = binomial, data = reg_data))
# summaries
summary(inf_time)
summary(inf_main)
summary(inf_fr)
summary(inf_full_lin)
summary(inf_full_cat)
summary(inf_full)
summary(inf_fr_only)
# residual plots
plot(inf_time, 1)
plot(inf_main, 1)
plot(inf_fr, 1)
plot(inf_full_lin, 1)
plot(inf_full_cat, 1)
# likelihood ratio test for significance of linear age term
# age marginally significant, time significant
car::Anova(inf_main, test = "LR")
# likelihood ratio test for significance of linear fr term
# Time and age are significant
car::Anova(inf_fr, test = "LR") #USE
# likelihood ratio test for significance of exposure time specific effect of age
# Time and Age are significant
car::Anova(inf_full, test = "LR")
AIC(inf_time, inf_main, inf_fr, inf_full, inf_fr_only) %>%
mutate(deltaAIC = AIC - min(AIC)) %>% add_column(model = c("time", "Age + time", "Age + fr + time", "Age*time*fr", "fr"), .before = 1)
crit <- 1.96
inf_preds <-
predict(inf_fr, newdata = prev, type = "link", se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half,
fit = boot::inv.logit(fit),
lwr = boot::inv.logit(lwr),
upr = boot::inv.logit(upr)) %>%
cbind(prev)
inf_preds %>%
ggplot() +
geom_line(aes(x = Age, y = fit, col = Time_treatment, linetype = Time_treatment)) +
geom_ribbon(aes(x = Age, ymin = lwr, ymax = upr, fill = Time_treatment), alpha = 0.3) +
geom_point(aes(x  = Age, y = prev, col = Time_treatment, shape = Time_treatment), size = 2) +
scale_color_manual(values=c("#ffcc33", "#0033cc"))+
scale_fill_manual(values=c("#ffcc33", "#0033cc"))+
ylim(0,1) +
labs(y = "Infection Probability",
x = "Age at Exposure (days)",
col = "Exposure\ntime",
shape = "Exposure\ntime",
linetype = "Exposure\ntime",
fill = "Exposure\ntime") +
theme_bw()+
theme(axis.title.y = element_text(size = 12, color ="black"),
axis.title.x = element_text(size = 12, color ="black"),
axis.text = element_text(size = 8, color="black"),
legend.text = element_text(size=10, color = "black"))
ggsave("figure3.pdf", width = 5, height = 4)
# make table of estimated probabilities and 95% CI
inf_preds %>% select(Age, Time_treatment, inf, n, prev, fit, lwr, upr) %>%
group_by(Age, Time_treatment) %>%
transmute("observed prevalence" = paste0(round(prev, 2), " (", inf, "/" , n, ")"),
"estimated prevelence" = paste0(round(prev,2), " (", round(lwr,2), ", ", round(upr,2), ")")) %>%
knitr::kable()
# built-in way to get LR confidence intervals
CI_OR_night <- confint(inf_fr, parm = "Time_treatmentNight", level = 0.95)
CI_OR_day <- confint(inf_fr, parm = "(Intercept)", level = 0.95)
CI_OR_age <- confint(inf_fr, parm = "Age", level = 0.95)
# odds of infection by 1 day increase in age at exposure
exp(coef(inf_fr)[2])
exp(CI_OR_age)
# odds of infection at median feeding rate
exp(coef(inf_fr)[3])
#odds of infection at night
exp(coef(inf_fr)[4])  #
exp(CI_OR_night)
# transform to probability scale
# point estimate and  95 % likelihood ratio interval
# day
boot::inv.logit(coef(inf_fr)[1])
boot::inv.logit(CI_OR_day)
# night
boot::inv.logit(coef(inf_fr)[4])
boot::inv.logit(CI_OR_night)
zero_summary <-
reg_data %>%
group_by(Age, Time_treatment) %>%
mutate(conditional_spore = ifelse(infected == 0, NA, spore_counts)) %>%
summarise(mean_spore_counts = mean(spore_counts, na.rm = TRUE),
var_spore_counts = var(spore_counts, na.rm = TRUE),
cond_mean_spore_counts = mean(conditional_spore, na.rm = TRUE),
n_zeros = sum(spore_counts == 0, na.rm = TRUE),
n_na = sum(is.na(spore_counts)),
n_infected = sum(infected == 1, na.rm = TRUE),
n_animals = n(),
fr_sw = mean(fr_sw))
zero_summary %>% knitr::kable(digits = 2)
# 5 daphnia have just 1 spore counted, including the only daphnia that was infected in Age 6 Day trt.
reg_data %>%
filter(spore_counts == 1)
ggplot() +
geom_jitter(data = filter(reg_data, Time_treatment == "Day"),
aes(x = Age - 0.1, y = spore_counts, col = Time_treatment), height = 0, width = 0.1) +
geom_jitter(data = filter(reg_data, Time_treatment == "Night"),
aes(x = Age + 0.1, y = spore_counts, col = Time_treatment), height = 0, width = 0.1) +
geom_point(data = filter(zero_summary, Time_treatment == "Day"),
aes(x = Age - 0.1, y = mean_spore_counts, col = Time_treatment),
size = 4, shape = 3) +
geom_point(data = filter(zero_summary, Time_treatment == "Night"),
aes(x = Age + 0.1, y = mean_spore_counts, col = Time_treatment),
size = 4, shape = 3) +
geom_point(data = filter(zero_summary, Time_treatment == "Day"),
aes(x = Age - 0.1, y = cond_mean_spore_counts, col = Time_treatment),
size = 4, shape = 2) +
geom_point(data = filter(zero_summary, Time_treatment == "Night"),
aes(x = Age + 0.1, y = cond_mean_spore_counts, col = Time_treatment),
size = 4, shape = 2)
# Per pscl vignette suggestions, lets look at the log count
# since we use log link for count model
# log(x + 0.5)
clog <- function(x) log(x + 0.5)
ggplot() +
geom_jitter(data = filter(reg_data, Time_treatment == "Day"),
aes(x = Age - 0.1, y = clog(spore_counts), col = Time_treatment), height = 0, width = 0.1) +
geom_jitter(data = filter(reg_data, Time_treatment == "Night"),
aes(x = Age + 0.1, y = clog(spore_counts), col = Time_treatment), height = 0, width = 0.1)  +
geom_point(data = filter(zero_summary, Time_treatment == "Day"),
aes(x = Age - 0.1, y = clog(mean_spore_counts), col = Time_treatment),
size = 4, shape = 22) +
geom_point(data = filter(zero_summary, Time_treatment == "Night"),
aes(x = Age + 0.1, y = clog(mean_spore_counts), col = Time_treatment),
size = 4, shape = 22) +
geom_point(data = filter(zero_summary, Time_treatment == "Day"),
aes(x = Age - 0.1, y = clog(cond_mean_spore_counts), col = Time_treatment),
size = 4, shape = 24) +
geom_point(data = filter(zero_summary, Time_treatment == "Night"),
aes(x = Age + 0.1, y = clog(cond_mean_spore_counts), col = Time_treatment),
size = 4, shape = 24)
# look for potential colinearity
reg_data %>%
ggplot() +
geom_jitter(aes(x = Age, y = Length_at_exposure_mm, col = factor(infected)))
reg_data %>%
ggplot() +
geom_jitter(aes(x = Age, y = Length_at_exposure_mm^3, col = factor(infected)))
cor.test(reg_data$Age, reg_data$Length_at_exposure_mm) #age and size are correlated
reg_data %>%
ggplot() +
geom_point(aes(x = Length_at_exposure_mm, y = clog(spore_counts)))
reg_data %>%
ggplot() +
geom_point(aes(x = Length_at_exposure_mm^3, y = clog(spore_counts)))
library(pscl)
#library(countreg)
library(lmtest)
# ZI models
# negative binomial
zi_nb_null <- zeroinfl(spore_counts ~ 1 | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_time <- zeroinfl(spore_counts ~ Time_treatment | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_fr <- zeroinfl(spore_counts ~ fr_sw | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_age_time <- zeroinfl(spore_counts ~ Age + Time_treatment | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_age_time_int <- zeroinfl(spore_counts ~ Age * Time_treatment | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_age_fr<- zeroinfl(spore_counts ~ Age + fr_sw | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_time_fr<- zeroinfl(spore_counts ~ Time_treatment + fr_sw | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_all<-zeroinfl(spore_counts ~ Age + Time_treatment + fr_sw | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
zi_nb_all_int<- zeroinfl(spore_counts ~ Age * Time_treatment * fr_sw | Age + Time_treatment,
dist = "negbin", link = "logit", data = reg_data)
bbmle::AICtab(zi_nb_null,
zi_nb_time,
zi_nb_fr,
zi_nb_time_fr,
zi_nb_age_time,
zi_nb_age_time_int,
zi_nb_age_fr,
zi_nb_all,
zi_nb_all_int,
logLik = TRUE, base = TRUE) %>%
data.frame() %>%
dplyr::select(-dLogLik) %>%
# write.csv("aic_spore_count.csv")
knitr::kable(digits = 2)
# using function from lmtest
lrtest(zi_nb_null, zi_nb_all_int) #0.0621
lrtest(zi_nb_all, zi_nb_all_int) # * 0.030
# output agrees with previous code chunk
car::Anova(zi_nb_all, test = "Chisq")
car::Anova(zi_nb_all_int, test = "Chisq")
library(emmeans)
newdata <- expand.grid(Time_treatment = c("Day", "Night"), Age = 6:9, fr_sw =median(all.data$fr_sw, na.rm = TRUE))
newdata$response<-predict(zi_nb_all, newdata, type = "response")
newdata$count<-predict(zi_nb_all, newdata, type = "count")
# zi_nb_all
emm_response <- emmeans(zi_nb_all, ~ Time_treatment | Age, at = list(Age = 6:9), mode = "response") # arithmatic mean
emm_response_lin <- emmeans(zi_nb_all, ~ Time_treatment | Age, at = list(Age = 6:9), mode = "response", lin.pred = T) # geometric mean
emm_count <- emmeans(zi_nb_all, ~ Time_treatment | Age, at = list(Age = 6:9), mode = "count")
#confidence intervals for plot
emm_count_df <- emm_count %>% data.frame() %>% rename("count_emm" = emmean, "count_lcl" = asymp.LCL, "count_ucl" = asymp.UCL)
emm_response_df <- emm_response %>% data.frame() %>% rename("response_emm" = emmean, "response_lcl" = asymp.LCL, "response_ucl" = asymp.UCL)
#Night - Day difference
summary(contrast(emm_response, "revpairwise"))
confint(contrast(emm_response, "revpairwise")) # night - day for response
#get average over age for above
summary(contrast(emmeans(zi_nb_all, ~ Time_treatment, mode = "response"), "revpairwise"))
confint(contrast(emmeans(zi_nb_all, ~ Time_treatment, mode = "response"), "revpairwise"))
# count
cont_count <- contrast(emm_count, "revpairwise") # night - day for count
summary(cont_count)
confint(cont_count)
#get average over age for above
summary(contrast(emmeans(zi_nb_all, ~ Time_treatment, mode = "count"), "revpairwise"))
confint(contrast(emmeans(zi_nb_all, ~ Time_treatment, mode = "count"), "revpairwise"))
newdata <- inner_join(newdata, emm_count_df, by = c("Time_treatment", "Age"))
newdata<- inner_join(newdata, emm_response_df, by = c("Time_treatment", "Age"))
# plot predicted and observed counts
p_count<-ggplot() +
geom_ribbon(data = newdata,
aes(x = Age, ymin = count_lcl, ymax = count_ucl, fill = Time_treatment),
alpha = 0.4) +
geom_jitter(data = zero_summary,
aes(x = Age, y = cond_mean_spore_counts, col = Time_treatment, size = n_infected),
alpha = 1, height = 0, width = 0.1) +
geom_jitter(data = filter(reg_data, infected == 1),
aes(x = Age, y = spore_counts, col = Time_treatment),
shape = 3, height = 0, width = 0.1) +
geom_line(data = newdata,
aes(x = Age, y = count_emm, col = Time_treatment, linetype = Time_treatment), size = 1) +
labs(y = "Spore counts when infected", x = "Age at exposure (days)",
col = "Exposure\ntime",
fill = "Exposure\ntime",
linetype = "Exposure\ntime",
size = "# infected") +
scale_color_manual(values=c("#ffcc33", "#0033cc"))+
scale_fill_manual(values=c("#ffcc33", "#0033cc"))+
theme_bw()
# plot predicted and observed response
# emm output with CI
p_response<-ggplot() +
geom_ribbon(data = newdata,
aes(x = Age, ymin = response_lcl, ymax = response_ucl, fill = Time_treatment),
alpha = 0.4) +
geom_jitter(data = zero_summary,
aes(x = Age, y = mean_spore_counts, col = Time_treatment, size = n_infected),
alpha = 1, height = 0, width = 0.1) +
geom_jitter(data = reg_data,
aes(x = Age, y = spore_counts, col = Time_treatment),
shape = 3, height = 0, width = 0.1) +
geom_line(data = newdata,
aes(x = Age, y = response_emm, col = Time_treatment, linetype = Time_treatment), size = 1) +
labs(y = "Spore counts", x = "Age at exposure (days)",
col = "Exposure\ntime",
fill = "Exposure\ntime",
linetype = "Exposure\ntime",
size = "# infected") +
scale_color_manual(values=c("#ffcc33", "#0033cc"))+
scale_fill_manual(values=c("#ffcc33", "#0033cc"))+
theme_bw()
combined <- (p_count & theme(legend.position = "none")) + p_response
combined + plot_layout(guides = "collect") + plot_annotation(tag_levels = 'A')
ggsave("figure4.png", width = 7, height = 5)
ggplot(mapping=aes(x=Time_treatment, y = sc_fr_sw, fill = Time_treatment), data = reg_data) +
geom_boxplot() +
facet_grid(.~Age)+
scale_fill_manual(values=c("#ffcc33", "#0033cc"))+
labs(y = "Feeding Rate (ml/hr)", x = "Time treatment for each age of exposure (6, 7, 8, or 9)",
fill = "Time treatment") +
theme_bw()
ggsave("app2.png", width = 7, height = 5)
