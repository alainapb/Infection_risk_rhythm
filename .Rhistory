axis.text = element_text(size = 8, color="black"),
legend.text = element_text(size=10, color = "black"))
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(0,6, 12,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(0,6, 12,18,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
#
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
summary(po_plot2<-glm(size_cor ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
crit <- 1.96
nd3 <- expand.grid(Hours=c(3,6,9,12,15,18,21,24), Age = seq(6, 9, length.out = 4))
po_fig2 <- predict(po_plot2, newdata = nd3, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd3)
po_fig2 %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = size_cor), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
po_correct %>%
ggplot()+
geom_point(aes(x=Hours, y = PO))+
geom_smooth(aes(x=Hours, y = PO), method = "lm")+
facet_grid(~Age)
summary(po_plot<-glm(PO ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
crit <- 1.96
nd2 <- expand.grid(Hours=c(3,6,9,12,15,18,21,24), Age = seq(6, 9, length.out = 4))
po_fig <- predict(po_plot, newdata = nd2, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd2)
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
summary(po_plot2<-glm(size_cor ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
crit <- 1.96
nd3 <- expand.grid(Hours=c(3,6,9,12,15,18,21,24), Age = seq(6, 9, length.out = 4))
po_fig2 <- predict(po_plot2, newdata = nd3, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd3)
po_fig2 %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = size_cor), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
ggave("po_figure.png", bg = "transparent", height =5, width = 9)
po_fig %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Hours, y = PO), alpha = .6) +
geom_line(aes(x = Hours, y = exp(fit)), color = "orange") +
geom_ribbon(aes(x = Hours, ymin = exp(lwr), ymax = exp(upr)), fill = "orange",alpha = 0.3)+
facet_grid(.~Age)+
scale_x_continuous(breaks = c(3,6,9,12,15,18,21,24))+
theme_bw()+
theme(legend.position = "bottom",
text = element_text(size=12),
axis.title = element_text(face = "bold", size =12),
strip.background =element_rect(fill="transparent", color="black", size = 1),
strip.text = element_text(face = "bold",size=12, color="black"),
axis.text.y = element_text(color="black", size = 10),
axis.text.x = element_text(color="black", size = 10),
panel.background = element_rect(fill="transparent", color =NA),
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill="transparent", color = NA),
axis.ticks = element_line(size =.3, color = "black"),
panel.border = element_rect(fill="transparent", color="black", size = 1),
panel.spacing = unit(1, "lines"))
ggsave("po_figure.png", bg = "transparent", height =5, width = 9)
summary(po_plot<-glm(PO ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = TRUE)
feed_data<-read.csv("data/feeding_data_3.28.21.csv", header=T)
po<-read.csv("data/4_Day_PO.csv", header = T) #Corrected_Change is the Active PO per sample (~8 ind. per sample)
po_correct<- # sample number is arbitrary
read_csv("data/PO_biodare_sample_correction.csv") %>%
pivot_longer(cols = 2:5, names_sep = "_",
names_to = c(NA,"sample"), values_to = "PO")
growth<-read.csv("data/growth_data_3.28.21.csv", header=T)
life<-read.csv("data/life_data_3.28.21.csv", header =T)
#calculate the mean of the controls for each plate
summary_data <- feed_data %>%
group_by(Plate_Control) %>%
mutate(control_mean = mean(Control_Flour_Reading, na.rm = T)) %>%
select(Plate_Control, control_mean) %>%
distinct() %>% as.data.frame()
#remove extra row
summary_data  <- summary_data[!(summary_data$Plate_Control == ""),]
#match control mean with plate treatment
map = setNames(summary_data$control_mean,summary_data$Plate_Control)
feed_data$control_mean <- map[as.character(feed_data$Plate_Treatment)]
#volume, mL
v = 10
#time, hours
t = 9
##difference in feeding compared to control
k=feed_data$control_mean/feed_data$Flourometry_Reading
##calculate feeding rate (Sarnelle and Wilson)
feed_data$fr_sw <- log(k) * (v/t)
#calculate mean feeding rate per animal (keep rate > 0)
animal_mean <- feed_data %>%
#keep fr_sw values > 0
#filter(fr_sw > 0) %>% #this removes 64 animals...
#group based on these variables
group_by(Time_treatment, Age, Animal, Exposed.Control) %>%
#means based on groups above
summarise(fr_sw = mean(fr_sw, na.rm=TRUE))
#combine feeding rates with life history data
merge(animal_mean, life, by=c("Age", "Time_treatment", "Animal", "Exposed.Control"), keep=TRUE) %>%
mutate(id = paste(Age,
Time_treatment,
Animal,
Exposed.Control,
sep = "_")) %>%
as.data.frame()->all.data
#create id for growth data
growth %>%
mutate(id = paste(Age,
Time_treatment,
Animal,
Exposed.Control,
sep = "_")) %>%
as.data.frame()->growth
# join growth data to feeding rate and life history data
all.data <- inner_join(all.data, growth, by = c("Age", "Time_treatment", "Animal", "Exposed.Control", "id"))
all.data %>%
filter(Sex == "F")%>%
ggplot()+
geom_boxplot(aes(x=as.factor(Age), y=fr_sw, color=Time_treatment))+
scale_color_manual(values=c("goldenrod2", "darkblue"))+
facet_grid(.~Exposed.Control)+
theme_bw()
all.data %>%
filter(Sex == "F")%>%
ggplot()+
geom_jitter(aes(x=Time_treatment, y=fr_sw, color=Exposed.Control))+
scale_color_manual(values=c("black", "limegreen"))+
facet_grid(.~Age)+
theme_bw()
growth %>%
filter(Age == 6) %>%
ggplot(aes(x=days_post_exposure, y=Length_at_exposure_mm, color=as.factor(Animal)))+
geom_point()+
geom_line()+
facet_grid(Time_treatment~.)
growth %>%
filter(Age == 7) %>%
ggplot(aes(x=days_post_exposure, y=Length_at_exposure_mm, color=as.factor(Animal)))+
geom_point()+
geom_line()+
facet_grid(Time_treatment~.)
growth %>%
filter(Age == 8) %>%
ggplot(aes(x=days_post_exposure, y=Length_at_exposure_mm, color=as.factor(Animal)))+
geom_point()+
geom_line()+
facet_grid(Time_treatment~.)
growth %>%
filter(Age == 9) %>%
ggplot(aes(x=days_post_exposure, y=Length_at_exposure_mm, color=as.factor(Animal)))+
geom_point()+
geom_line()+
facet_grid(Time_treatment~.)
# infection prevalence
all.data %>%
filter(Time_treatment == "Exposed" | Sex == "F") %>%
ggplot(aes(x=Age, y=infected, color=Time_treatment))+
scale_color_manual(values=c("goldenrod2", "darkblue"))+
geom_jitter(width = .1, height = .1)+
geom_smooth(method="lm")+
scale_y_continuous(limits=c(-.1,1))+
scale_x_continuous(breaks=c(6,7,8,9))+
theme_bw()
#infection intensity
life %>%
filter(Time_treatment == "Exposed"| Sex == "F") %>%
ggplot(aes(x=Age, y=spore_counts, color=Time_treatment))+
scale_color_manual(values=c("goldenrod2", "darkblue"))+
#geom_jitter(width=.25)+
geom_point()+
geom_smooth(method="lm")+
theme_bw()
#total offspring
all.data %>%
filter(Sex == "F") %>%
#filter(infected != "NA") %>%     #removes controls
ggplot(aes(x=Time_treatment, y=total_offspring, fill=as.factor(infected)))+
geom_boxplot()+
facet_grid(~Age)
#age at first clutch
all.data %>%
filter(Sex == "F") %>%
#filter(infected != "NA") %>%     #removes controls
ggplot(aes(x=Time_treatment, y=age_at_first_clutch, fill=as.factor(infected)))+
geom_boxplot()+
facet_grid(~Age)
#total offspring
all.data %>%
filter(Sex == "F") %>%
#filter(infected != "NA") %>%     #removes controls
ggplot(aes(x=Time_treatment, y=total_offspring, fill=as.factor(infected)))+
geom_boxplot()+
facet_grid(~Age)
#age at first clutch
all.data %>%
filter(Sex == "F") %>%
#filter(infected != "NA") %>%     #removes controls
ggplot(aes(x=Time_treatment, y=age_at_first_clutch, fill=as.factor(infected)))+
geom_boxplot()+
facet_grid(~Age)
growth %>%
filter(days_post_exposure == 0) %>%
ggplot()+
geom_boxplot(mapping=aes(x=as.factor(Age), y=Length_at_exposure_mm))
all.data %>%
group_by(Age) %>%
summarise(length = mean(Length_at_exposure_mm, na.rm=TRUE))-> average_size
average_size$size<-(average_size$length)^3
po_correct$Age<-c(rep(6, 32), rep(7,32), rep(8,32), rep(9,32))
po_correct$Hours<-rep(c(rep(3,4), rep(6,4), rep(9, 4), rep(12,4), rep(15,4), rep(18,4), rep(21,4), rep(24,4)),4)
po_correct$Phase<-c(rep("Resting", 20), rep('Active', 12),rep("Resting", 20), rep('Active', 12), rep("Resting", 20), rep('Active', 12), rep("Resting", 20), rep("Active", 12))
po_correct$Time_treatment<-c(rep("Light", 20), rep('Dark', 12),rep("Light", 20), rep('Dark', 12), rep("Light", 20), rep('Dark', 44))
no_size<-po_correct %>%
ggplot() +
geom_point(aes(x = Hours, y = log(PO), group = sample)) +
geom_smooth(aes(x = Hours, y = log(PO)), method = "lm", color ="orange", alpha = 0.5) +
labs(y="Active PO", x="Age (days)")+
facet_grid(~Age)+
#scale_x_continuous(breaks = c(24,48,72,96), labels = c(6,7, 8,9))+
theme_bw()+
theme(axis.text.x = element_text(size=8, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title = element_text(size = 12, color="black"))
#ggsave("figure2.pdf", height =4, width =6)
##Size corrected plots
a<-as.vector(po_correct %>%
filter(time < 27) %>%
summarise(size_cor = PO/2.425660))
b<-as.vector(po_correct %>%
filter(time > 24, time <51) %>%
summarise(size_cor = PO/2.564842))
c<-as.vector(po_correct %>%
filter(time > 48, time < 75) %>%
summarise(size_cor = PO/2.761120))
d<-as.vector(po_correct %>%
filter(time > 72) %>%
summarise(size_cor = PO/3.097012))
size_cor<-unlist(c(a,b,c,d))
unname(size_cor)
po_correct$size_cor<-unlist(unname(size_cor))
with_size<-po_correct %>%
ggplot() +
geom_point(aes(x = Hours, y = log(size_cor), group = sample)) +
geom_smooth(aes(x = Hours, y = log(size_cor)), method = "lm", color ="orange", alpha = .5) +
labs(y="Active PO", x="Age (days)")+
facet_grid(~Age)+
#scale_x_continuous(breaks = c(24,48,72,96), labels = c(6,7, 8,9))+
theme_bw()+
theme(axis.text.x = element_text(size=8, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title = element_text(size = 12, color="black"))
no_size + with_size
####### PO STATS #########
hist(po_correct$PO)
# po is strictly? positive
# no zeros
po_summary <- po_correct %>%
group_by(Age) %>%
mutate(age_mean_po = mean(PO, na.rm = TRUE)) %>%
group_by(Time_treatment, Age) %>%
summarise(mean_po = mean(PO, na.rm = TRUE),
min_po = min(PO, na.rm = TRUE),
max_po = max(PO, na.rm = TRUE),
age_mean_po = unique(age_mean_po))
po_summary
# linear model using log(Corrected_Change) as response
summary(po_age<-glm(PO ~ Age + Time_treatment, family = gaussian(link = "log"), data = po_correct))
with(summary(po_age), 1 - deviance/null.deviance) #Rsquared .23
plot(po_age)
# plot predictions
crit <- 1.96
nd <- expand.grid(Time_treatment=c("Dark", "Light"), Age = seq(6, 9, length.out = 100))
po_pred <- predict(po_age, newdata = nd, se.fit = TRUE) %>%
as_tibble() %>%
mutate(half = crit * se.fit,
lwr = fit - half,
upr = fit + half) %>%
cbind(nd)
po_pred %>%
ggplot() +
geom_point(data = po_correct, mapping = aes(x = Age, y = PO, col = Time_treatment), alpha = .6) +
geom_point(data = po_summary, mapping = aes(x = Age, y =mean_po, col = Time_treatment), pch = 22, size =5)+
geom_line(aes(x = Age, y = exp(fit), col = Time_treatment)) +
geom_ribbon(aes(x = Age, ymin = exp(lwr), ymax = exp(upr), fill = Time_treatment), alpha = 0.3)+
scale_color_manual(values=c( "#0033cc", "#ffcc33"))+
scale_fill_manual(values=c("#0033cc", "#ffcc33"))+
theme_bw()
#look at size corrected PO
summary(po_sc_age<-glm(size_cor ~ Age + Time_treatment, family = gaussian(link = "log"), data = po_correct))
with(summary(po_sc_age), 1 - deviance/null.deviance) #rsquared .14
# linear model using log(Corrected_Change) as response
summary(po_age<-glm(PO ~ Age + Time_treatment, family = gaussian(link = "log"), data = po_correct))
summary(po_plot<-glm(PO ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
summary(po_plot<-glm(PO ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
with(summary(po_plot), 1 - deviance/null.deviance) #rsquared .14
summary(po_plot2<-glm(size_cor ~ Age + Hours, family = gaussian(link = "log"), data = po_correct))
with(summary(po_plot2), 1 - deviance/null.deviance) #rsquared .14
```{r infection_prevalence}
prev <- all.data %>%
filter(Exposed.Control == "Exposed",
days_post_exposure == 0) %>%
group_by(Age, Time_treatment) %>%
summarise(inf = sum(infected, na.rm=T),
n = n(),
prev = inf/n)
prev %>% knitr::kable()
prev %>% ggplot() +
geom_point(aes(x = Age, y = prev, col = Time_treatment)) +
geom_line(aes(x = Age, y = prev, col = Time_treatment)) +
ylim(0,1)
```{r}
# get subset for infection and spore count analysis
# arbitrarily choose 0 days post exposure since the data is duplicated for each days_post_exposure
reg_data <- filter(all.data, Exposed.Control == "Exposed", days_post_exposure == 0)
